int f(char s)
{
		switch (s)
		{
			case'0': return 0;
			case'1': return 1;
			case'2': return 2;
			case'3': return 3;
			case'4': return 4;
			case'5': return 5;
			case'6': return 6;
			case'7': return 7;
			case'8': return 8;
			case'9': return 9;
			case'*': return 10;
			case'+': return 11;
			case'-': return 12;
			case'/': return 13;
			case'.': return 14;
			case'^': return 15;
			case'(': return 16;
			case')': return 17;
			case's': return 18;
			case'c': return 19;
			case'l': return 20;
			case'f': return 21;
			case'i': return 22;
			case'n': return 23;
			case'o': return 24;
			case'a': return 25;
			case't': return 26;
		}
}

int main()
{
	int m[13][27] =
	{
		{1, 1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,5,-1,8,10,9,12,-1,-1,-1,-1,-1},
		{7,1,1,1,1,1,1,1,1,1,-1,-1,2,-1,-1,-1,2,-1,8,10,9,12,-1,-1,-1,-1,-1},
		{-1,4,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,5,6,8,10,9,12,-1,-1,-1,-1,-1},
		{4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,5,6,8,10,9,12,-1,-1,-1,-1,-1},
		{4,4,4,4,4,4,4,4,4,4,-1,-1,4,-1,-1,-1,5,6,8,10,9,12,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,3,3,3,-1,3,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3}
	};
	char s[10] = { '1', '.', '5','+','s','i','n','1','*','0' };
	int state=1;
	for (int i = 0; i < 10; i++)
	{
		while (s[i] != '\0')
		{
			state = m[state - 1][f(s[i])];
			if (state - 1 < 0)
				break;
		}
	}
}